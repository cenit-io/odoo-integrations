<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data>

        <record id="view_cenit_geneea_natural_language_processing_1_0_settings" model="ir.ui.view">
            <field name="name">&lt;div class&#x3D;&quot;api-description&quot;&gt;
    &lt;h2&gt;Authentication&lt;/h2&gt;
    &lt;p&gt;For all calls, supply your API key. &lt;a href&#x3D;&quot;https://geneea.3scale.net/&quot;&gt;Sign up to &lt;em&gt;obtain the key&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
    &lt;p&gt;
        Our API supports both &lt;em&gt;unencrypted (HTTP)&lt;/em&gt; and &lt;em&gt;encrypted (HTTPS)&lt;/em&gt; protocols.
        However, for security reasons, we strongly encourage using only the encrypted version.
    &lt;/p&gt;
    &lt;p&gt;The API key should be supplied as either a request parameter &lt;code&gt;user_key&lt;/code&gt; or in &lt;code&gt;Authorization&lt;/code&gt; header.&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;Authorization: user_key &amp;lt;YOUR_API_KEY&amp;gt;&lt;/code&gt;&lt;/pre&gt;

    &lt;h2&gt;API operations&lt;/h2&gt;
    &lt;p&gt;
        All API operations can perform analysis on supplied raw text or on text extracted from a given URL.
        Optionally, one can supply additional information which can make the result more precise. An example
        of such information would be the language of text or a particular text extractor for URL resources.
    &lt;/p&gt;
    &lt;p&gt;The supported types of analyses are:&lt;/p&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;strong&gt;lemmatization&lt;/strong&gt; &amp;longrightarrow;
            Finds out lemmata (basic forms) of all the words in the document.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;correction&lt;/strong&gt; &amp;longrightarrow;
            Performs correction (diacritization) on all the words in the document.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;topic detection&lt;/strong&gt; &amp;longrightarrow;
            Determines a topic of the document, e.g. finance or sports.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;sentiment analysis&lt;/strong&gt; &amp;longrightarrow;
            Determines a sentiment of the document, i.e. how positive or negative the document is.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;named entity recognition&lt;/strong&gt; &amp;longrightarrow;
            Finds named entities (like person, location, date etc.) mentioned the the document.
        &lt;/li&gt;
    &lt;/ul&gt;

    &lt;h2&gt;Encoding&lt;/h2&gt;
    &lt;p&gt;The supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.&lt;/p&gt;

    &lt;h2&gt;Returned values&lt;/h2&gt;
    &lt;p&gt;The API calls always return objects in serialized JSON format in UTF-8 encoding.&lt;/p&gt;
    &lt;p&gt;
        If any error occurs, the HTTP response code will be in the range &lt;code&gt;4xx&lt;/code&gt; (client-side error) or
        &lt;code&gt;5xx&lt;/code&gt; (server-side error). In this situation, the body of the response will contain information
        about the error in JSON format, with &lt;code&gt;exception&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt; values.
    &lt;/p&gt;

    &lt;h2&gt;URL limitations&lt;/h2&gt;
    &lt;p&gt;
        All the requests are semantically &lt;code&gt;GET&lt;/code&gt;. However, for longer texts, you may run into issues
        with URL length limit. Therefore, it&#x27;s possible to always issue a &lt;code&gt;POST&lt;/code&gt; request with all
        the parameters encoded as a JSON in the request body.
    &lt;/p&gt;
    &lt;p&gt;Example:&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;
        POST /s1/sentiment
        Content-Type: application/json

        {&quot;text&quot;:&quot;There is no harm in being sometimes wrong - especially if one is promptly found out.&quot;}
    &lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;This is equivalent to &lt;code&gt;GET /s1/sentiment?text&#x3D;There%20is%20no%20harm...&lt;/code&gt;&lt;/p&gt;

    &lt;h2&gt;Request limitations&lt;/h2&gt;
    &lt;p&gt;
        The API has other limitations concerning the size of the HTTP requests. The maximal allowed size of any
        POST request body is &lt;em&gt;512 KiB&lt;/em&gt;. For request with a URL resource, the maximal allowed number of
        extracted characters from each such resource is &lt;em&gt;100,000&lt;/em&gt;.
    &lt;/p&gt;

    &lt;h2&gt;More information&lt;/h2&gt;
    &lt;p&gt;
        &lt;a href&#x3D;&quot;https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation&quot; target&#x3D;&quot;_blank&quot;&gt;
        The Interpretor Public Documentation
        &lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
 settings</field>
            <field name="model">cenit.geneea_natural_language_processing_1_0.settings</field>
            <field name="arch" type="xml">
                <form string="Configure &lt;div class&#x3D;&quot;api-description&quot;&gt;
    &lt;h2&gt;Authentication&lt;/h2&gt;
    &lt;p&gt;For all calls, supply your API key. &lt;a href&#x3D;&quot;https://geneea.3scale.net/&quot;&gt;Sign up to &lt;em&gt;obtain the key&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
    &lt;p&gt;
        Our API supports both &lt;em&gt;unencrypted (HTTP)&lt;/em&gt; and &lt;em&gt;encrypted (HTTPS)&lt;/em&gt; protocols.
        However, for security reasons, we strongly encourage using only the encrypted version.
    &lt;/p&gt;
    &lt;p&gt;The API key should be supplied as either a request parameter &lt;code&gt;user_key&lt;/code&gt; or in &lt;code&gt;Authorization&lt;/code&gt; header.&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;Authorization: user_key &amp;lt;YOUR_API_KEY&amp;gt;&lt;/code&gt;&lt;/pre&gt;

    &lt;h2&gt;API operations&lt;/h2&gt;
    &lt;p&gt;
        All API operations can perform analysis on supplied raw text or on text extracted from a given URL.
        Optionally, one can supply additional information which can make the result more precise. An example
        of such information would be the language of text or a particular text extractor for URL resources.
    &lt;/p&gt;
    &lt;p&gt;The supported types of analyses are:&lt;/p&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;strong&gt;lemmatization&lt;/strong&gt; &amp;longrightarrow;
            Finds out lemmata (basic forms) of all the words in the document.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;correction&lt;/strong&gt; &amp;longrightarrow;
            Performs correction (diacritization) on all the words in the document.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;topic detection&lt;/strong&gt; &amp;longrightarrow;
            Determines a topic of the document, e.g. finance or sports.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;sentiment analysis&lt;/strong&gt; &amp;longrightarrow;
            Determines a sentiment of the document, i.e. how positive or negative the document is.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;named entity recognition&lt;/strong&gt; &amp;longrightarrow;
            Finds named entities (like person, location, date etc.) mentioned the the document.
        &lt;/li&gt;
    &lt;/ul&gt;

    &lt;h2&gt;Encoding&lt;/h2&gt;
    &lt;p&gt;The supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.&lt;/p&gt;

    &lt;h2&gt;Returned values&lt;/h2&gt;
    &lt;p&gt;The API calls always return objects in serialized JSON format in UTF-8 encoding.&lt;/p&gt;
    &lt;p&gt;
        If any error occurs, the HTTP response code will be in the range &lt;code&gt;4xx&lt;/code&gt; (client-side error) or
        &lt;code&gt;5xx&lt;/code&gt; (server-side error). In this situation, the body of the response will contain information
        about the error in JSON format, with &lt;code&gt;exception&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt; values.
    &lt;/p&gt;

    &lt;h2&gt;URL limitations&lt;/h2&gt;
    &lt;p&gt;
        All the requests are semantically &lt;code&gt;GET&lt;/code&gt;. However, for longer texts, you may run into issues
        with URL length limit. Therefore, it&#x27;s possible to always issue a &lt;code&gt;POST&lt;/code&gt; request with all
        the parameters encoded as a JSON in the request body.
    &lt;/p&gt;
    &lt;p&gt;Example:&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;
        POST /s1/sentiment
        Content-Type: application/json

        {&quot;text&quot;:&quot;There is no harm in being sometimes wrong - especially if one is promptly found out.&quot;}
    &lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;This is equivalent to &lt;code&gt;GET /s1/sentiment?text&#x3D;There%20is%20no%20harm...&lt;/code&gt;&lt;/p&gt;

    &lt;h2&gt;Request limitations&lt;/h2&gt;
    &lt;p&gt;
        The API has other limitations concerning the size of the HTTP requests. The maximal allowed size of any
        POST request body is &lt;em&gt;512 KiB&lt;/em&gt;. For request with a URL resource, the maximal allowed number of
        extracted characters from each such resource is &lt;em&gt;100,000&lt;/em&gt;.
    &lt;/p&gt;

    &lt;h2&gt;More information&lt;/h2&gt;
    &lt;p&gt;
        &lt;a href&#x3D;&quot;https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation&quot; target&#x3D;&quot;_blank&quot;&gt;
        The Interpretor Public Documentation
        &lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
" class="oe_form_configuration">
                    <header>
                        <button string="Apply" type="object"
                                name="execute" class="oe_highlight"/>
                        or
                        <button string="Cancel" type="object"
                                name="cancel" class="oe_link"/>
                    </header>
                    <div>
                        <group string="&lt;div class&#x3D;&quot;api-description&quot;&gt;
    &lt;h2&gt;Authentication&lt;/h2&gt;
    &lt;p&gt;For all calls, supply your API key. &lt;a href&#x3D;&quot;https://geneea.3scale.net/&quot;&gt;Sign up to &lt;em&gt;obtain the key&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
    &lt;p&gt;
        Our API supports both &lt;em&gt;unencrypted (HTTP)&lt;/em&gt; and &lt;em&gt;encrypted (HTTPS)&lt;/em&gt; protocols.
        However, for security reasons, we strongly encourage using only the encrypted version.
    &lt;/p&gt;
    &lt;p&gt;The API key should be supplied as either a request parameter &lt;code&gt;user_key&lt;/code&gt; or in &lt;code&gt;Authorization&lt;/code&gt; header.&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;Authorization: user_key &amp;lt;YOUR_API_KEY&amp;gt;&lt;/code&gt;&lt;/pre&gt;

    &lt;h2&gt;API operations&lt;/h2&gt;
    &lt;p&gt;
        All API operations can perform analysis on supplied raw text or on text extracted from a given URL.
        Optionally, one can supply additional information which can make the result more precise. An example
        of such information would be the language of text or a particular text extractor for URL resources.
    &lt;/p&gt;
    &lt;p&gt;The supported types of analyses are:&lt;/p&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;strong&gt;lemmatization&lt;/strong&gt; &amp;longrightarrow;
            Finds out lemmata (basic forms) of all the words in the document.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;correction&lt;/strong&gt; &amp;longrightarrow;
            Performs correction (diacritization) on all the words in the document.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;topic detection&lt;/strong&gt; &amp;longrightarrow;
            Determines a topic of the document, e.g. finance or sports.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;sentiment analysis&lt;/strong&gt; &amp;longrightarrow;
            Determines a sentiment of the document, i.e. how positive or negative the document is.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;named entity recognition&lt;/strong&gt; &amp;longrightarrow;
            Finds named entities (like person, location, date etc.) mentioned the the document.
        &lt;/li&gt;
    &lt;/ul&gt;

    &lt;h2&gt;Encoding&lt;/h2&gt;
    &lt;p&gt;The supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.&lt;/p&gt;

    &lt;h2&gt;Returned values&lt;/h2&gt;
    &lt;p&gt;The API calls always return objects in serialized JSON format in UTF-8 encoding.&lt;/p&gt;
    &lt;p&gt;
        If any error occurs, the HTTP response code will be in the range &lt;code&gt;4xx&lt;/code&gt; (client-side error) or
        &lt;code&gt;5xx&lt;/code&gt; (server-side error). In this situation, the body of the response will contain information
        about the error in JSON format, with &lt;code&gt;exception&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt; values.
    &lt;/p&gt;

    &lt;h2&gt;URL limitations&lt;/h2&gt;
    &lt;p&gt;
        All the requests are semantically &lt;code&gt;GET&lt;/code&gt;. However, for longer texts, you may run into issues
        with URL length limit. Therefore, it&#x27;s possible to always issue a &lt;code&gt;POST&lt;/code&gt; request with all
        the parameters encoded as a JSON in the request body.
    &lt;/p&gt;
    &lt;p&gt;Example:&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;
        POST /s1/sentiment
        Content-Type: application/json

        {&quot;text&quot;:&quot;There is no harm in being sometimes wrong - especially if one is promptly found out.&quot;}
    &lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;This is equivalent to &lt;code&gt;GET /s1/sentiment?text&#x3D;There%20is%20no%20harm...&lt;/code&gt;&lt;/p&gt;

    &lt;h2&gt;Request limitations&lt;/h2&gt;
    &lt;p&gt;
        The API has other limitations concerning the size of the HTTP requests. The maximal allowed size of any
        POST request body is &lt;em&gt;512 KiB&lt;/em&gt;. For request with a URL resource, the maximal allowed number of
        extracted characters from each such resource is &lt;em&gt;100,000&lt;/em&gt;.
    &lt;/p&gt;

    &lt;h2&gt;More information&lt;/h2&gt;
    &lt;p&gt;
        &lt;a href&#x3D;&quot;https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation&quot; target&#x3D;&quot;_blank&quot;&gt;
        The Interpretor Public Documentation
        &lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
 settings">
                            <field name='api_key' placeholder='Your API Key' />
                        </group>
                    </div>
                </form>
            </field>
        </record>

        <record id="action_cenit_geneea_natural_language_processing_1_0_settings" model="ir.actions.act_window">
            <field name="name">&lt;div class&#x3D;&quot;api-description&quot;&gt;
    &lt;h2&gt;Authentication&lt;/h2&gt;
    &lt;p&gt;For all calls, supply your API key. &lt;a href&#x3D;&quot;https://geneea.3scale.net/&quot;&gt;Sign up to &lt;em&gt;obtain the key&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
    &lt;p&gt;
        Our API supports both &lt;em&gt;unencrypted (HTTP)&lt;/em&gt; and &lt;em&gt;encrypted (HTTPS)&lt;/em&gt; protocols.
        However, for security reasons, we strongly encourage using only the encrypted version.
    &lt;/p&gt;
    &lt;p&gt;The API key should be supplied as either a request parameter &lt;code&gt;user_key&lt;/code&gt; or in &lt;code&gt;Authorization&lt;/code&gt; header.&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;Authorization: user_key &amp;lt;YOUR_API_KEY&amp;gt;&lt;/code&gt;&lt;/pre&gt;

    &lt;h2&gt;API operations&lt;/h2&gt;
    &lt;p&gt;
        All API operations can perform analysis on supplied raw text or on text extracted from a given URL.
        Optionally, one can supply additional information which can make the result more precise. An example
        of such information would be the language of text or a particular text extractor for URL resources.
    &lt;/p&gt;
    &lt;p&gt;The supported types of analyses are:&lt;/p&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;strong&gt;lemmatization&lt;/strong&gt; &amp;longrightarrow;
            Finds out lemmata (basic forms) of all the words in the document.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;correction&lt;/strong&gt; &amp;longrightarrow;
            Performs correction (diacritization) on all the words in the document.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;topic detection&lt;/strong&gt; &amp;longrightarrow;
            Determines a topic of the document, e.g. finance or sports.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;sentiment analysis&lt;/strong&gt; &amp;longrightarrow;
            Determines a sentiment of the document, i.e. how positive or negative the document is.
        &lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;named entity recognition&lt;/strong&gt; &amp;longrightarrow;
            Finds named entities (like person, location, date etc.) mentioned the the document.
        &lt;/li&gt;
    &lt;/ul&gt;

    &lt;h2&gt;Encoding&lt;/h2&gt;
    &lt;p&gt;The supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.&lt;/p&gt;

    &lt;h2&gt;Returned values&lt;/h2&gt;
    &lt;p&gt;The API calls always return objects in serialized JSON format in UTF-8 encoding.&lt;/p&gt;
    &lt;p&gt;
        If any error occurs, the HTTP response code will be in the range &lt;code&gt;4xx&lt;/code&gt; (client-side error) or
        &lt;code&gt;5xx&lt;/code&gt; (server-side error). In this situation, the body of the response will contain information
        about the error in JSON format, with &lt;code&gt;exception&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt; values.
    &lt;/p&gt;

    &lt;h2&gt;URL limitations&lt;/h2&gt;
    &lt;p&gt;
        All the requests are semantically &lt;code&gt;GET&lt;/code&gt;. However, for longer texts, you may run into issues
        with URL length limit. Therefore, it&#x27;s possible to always issue a &lt;code&gt;POST&lt;/code&gt; request with all
        the parameters encoded as a JSON in the request body.
    &lt;/p&gt;
    &lt;p&gt;Example:&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;
        POST /s1/sentiment
        Content-Type: application/json

        {&quot;text&quot;:&quot;There is no harm in being sometimes wrong - especially if one is promptly found out.&quot;}
    &lt;/code&gt;&lt;/pre&gt;
    &lt;p&gt;This is equivalent to &lt;code&gt;GET /s1/sentiment?text&#x3D;There%20is%20no%20harm...&lt;/code&gt;&lt;/p&gt;

    &lt;h2&gt;Request limitations&lt;/h2&gt;
    &lt;p&gt;
        The API has other limitations concerning the size of the HTTP requests. The maximal allowed size of any
        POST request body is &lt;em&gt;512 KiB&lt;/em&gt;. For request with a URL resource, the maximal allowed number of
        extracted characters from each such resource is &lt;em&gt;100,000&lt;/em&gt;.
    &lt;/p&gt;

    &lt;h2&gt;More information&lt;/h2&gt;
    &lt;p&gt;
        &lt;a href&#x3D;&quot;https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation&quot; target&#x3D;&quot;_blank&quot;&gt;
        The Interpretor Public Documentation
        &lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;
 settings</field>
            <field name="res_model">cenit.geneea_natural_language_processing_1_0.settings</field>
            <field name="view_mode">form</field>
            <field name="target">inline</field>
            <field name="view_id" ref="view_cenit_geneea_natural_language_processing_1_0_settings"/>
        </record>

        <menuitem id="menu_cenit_geneea_natural_language_processing_1_0_settings"
            parent="cenit_base.menu_cenit_integrations_settings"
            sequence="1" action="action_cenit_geneea_natural_language_processing_1_0_settings"/>

        <menuitem id="menu_cenit_geneea_natural_language_processing_1_0_settings_alt"
            parent="cenit_base.menu_cenit_integrations_settings_alt"
            sequence="1" action="action_cenit_geneea_natural_language_processing_1_0_settings"/>

    </data>
</openerp>
